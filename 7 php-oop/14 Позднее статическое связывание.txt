
	В последних версиях PHP стат свойства и методы стало можно 
	вызывать вместо self::    static:: 
	
	Сделано для разрешения проблемы при наследовании статических методов.
	
	self::   работает как РАННЕЕ стат связывание и привязывает стат метод метод к текущему классу где объвлен.
	 и даже если переопределить стат метод в классе наследнике. он все равно будет дергать данные из метода
	  где объявлен
	
	static::  как  ПОЗДНЕЕ стат связывание и такой метод получает данные класса с которым идет работа 
	 в текущий момент.
	 
	
ТЕСТЫ
	Какое ключевое слово используется при позднем статическом связывании?
		static
		

		
ЗАДАНИЕ
	BaseModel - это класс, реализующий логику взаимодействия с базой данных. От него могут 
	 наследоваться классы нашей предметной области. В данном примере это User, Member и Teacher. 
	 В BaseModel определен статический метод getTableName, который возвращает имя таблицы для 
	 хранения экземпляров текущего класса вашего приложения. 
	 Вычисляется он по следующим правилам:
	 	Если задано статическое свойство $tableName, то возвращается его значение.
		В противном случае берется имя класса (без неймспейса) и приводится к нижнему регистру.
	
	file: BaseModel.php
	Необходимо реализовать статический метод getTableName.


				// Файл  BaseModel.php
					<?php

					namespace App;

					class BaseModel
					{
						// BEGIN (write your solution here)
						public static $tableName = null;

						public static function getTableName()
						{
							return static::$tableName ? static::$tableName : self::tableize(get_called_class());
						}

						public static function tableize($className)
						{
							$parts = explode('\\', $className);
							$lastPart = end($parts);
							return strtolower($lastPart);
						}
						// END
					}
