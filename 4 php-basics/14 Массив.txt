	
	Массив имеет множество элементов и мы имеем к ним индексируемый доступ.
			
			$ar2 = [[344], [1111, 222, 333], ['milk', 5]];
			var_dump($ar2);
			echo $ar2[1][2];		// Вывод 333
			
	Mutation изменение массива.
			$ar2[] = 'orange';		// добавление элементов
			var_dump($ar2);
			echo $ar2[3];			// orange
			
			$ar2[1][2] = 555;		// Изменили  333 на 555
			
			unset($ar2[3])			// удалили  orange
			
	
	Объединение массивов
			[1, 2, 3, 5] + [8, 1, 2]; 		// [1, 2, 3, 5]
	
			[] == [];
			
			[1] != [2];				// true
			
			
	Функции.
		sizeof($arr);				// реал размер массива
		in_array('apple', $arr);	// проверка наличия элемента в массиве
		empty($arr);				// пустой ли массива
		end($arr);					// Последний элемент массива
		
		print_r($arr);				// Распечатывание массива
		
		
	
				
					function myMax2(array $arr)  		// Макс элемент массива
					{
					if(empty($arr)) {
						return;
					}
					
					$max = $arr[0];
					
					foreach ($array as $value) {		// расширенная запись  foreach ($array as $index => $value)
						if ($max < $value) {
							$max = $value;
						}
					}
					}
	
	
	
	
ССЫЛКИ
		http://php.net/manual/ru/language.types.array.php
		
		
		
		
		
		
ЗАДАНИЕ
	Реализуйте функцию uniq, которая принимает, как аргумент, массив, и возвращает массив, 
	 в котором оставлены только уникальные значения из исходного массива.
	Пример:
	uniq([]); // []
	uniq([12, 1, 1, 3, 5, 10, 3, 10]); // [12, 1, 3, 5, 10]
	Подсказки
	Создайте внутри новый массив и заполняйте его уникальными значениями.
					
					// Мое решение
					function uniq($arr)
					{
						$res = [];
						foreach ($arr as $value) {
						  if (!in_array($value, $res)) {
							$res[] = $value;
						  }  
						}
						return $res;
					}
		
					// Решение преподавателя
					function uniq(array $arr)
					{
						$result = [];
						for ($i = 0; $i < sizeof($arr); $i++) {
							if (in_array($arr[$i], $result)) {
								continue;
							}

							$result[] = $arr[$i];
						}

						return $result;
					}
		
		
		