
	Один из главных навыков разработчика это умение строить абстракции и в этом нам помогут функции.
	ЯП должен предоставлять механизмы, которые позволяют строить абстракции и описывать их (например пользовательские функции).
	
	Описание функции
			function hypotenuse($cathetus1, $cathetus2)  	// Это формальные праметры( в них попадут фактические параметры)
			{
				return sqrt($cathetus1 ** 2 + $cathetus2 ** 2);
			}
			
	Вызов функции 
			echo hypotenuse(3, 4);
			
		
	Возврат значения return . После return код лежащий ниже никогда не выполнится.
	
	Если объявить функцию с одним и тем же названием дважды, то будет ошибка исполнения кода.
	
	NULL
	В php (как и во многих других языках) существует специальное значение обозначающие отсутствие значения и называется оно null. null в php представлен значением null.

	Как мы помним, вызов функции это выражение, а выражение всегда обязано возвращать значение (это дает нам возможность использовать его в других выражениях). Что будет если мы вызовем функцию которая не возвращает значения? Мы получим null.

	Какие еще есть способы получить null после вызова функции:
		Написать внутри функции return;. Эта инструкция без выражения как раз возвращает null коду вызвавшему функцию.
		Можно явно описать возврат return null;
		
		
		
ЗАДАНИЕ 
	Реализуйте функцию ballVolume, которая высчитывает объем шара на основании его радиуса по формуле 4πR³/3
	
			function ballVolume($r)
			{
				return (4 * pi() * ($r ** 3)) / 3;
			}