








ВОПРОСЫ
	Vladislav Bukhanets
		Подскажите пожалуйста дополнительную литературу и источники информации по этому курсу. 
		А то учительские решения порой кажутся каким-то колдовством.
	Kirill MokevninPRO
		Очень сложно ответить на этот вопрос не зная про что идет речь.
	Vladislav Bukhanets ТС
		Наверное больше всего вопросов возникает по фреймворку в целом: почему такая структура, 
		 используются такие методы... Это очень обширная и глубокая тема, а теории мало.
	Kirill MokevninPRO
		Согласен. Рекомендую взять существующий микрофреймворк и попробовать сделать на 
		 нем блог: https://www.slimframework.com/
		 
		 
	Петров КириллPRO
		Добрый вечер. Тут еще один вопрос возник, а зачем нам вообще нужны две функции render(), 
		 если в Template.php понятно, она выполняет преобразование шаблона, то в Renderer.php 
		 как-то непонятно, там получается ее единственная цель заменить относительный путь на 
		 абсолютный и вызвать render() из Template.php. Кажется логичнее ее было бы назвать как 
		 getAbsPath() или в этом духе и напрямую вызывать render() с подготовленным абсолютным путем?
	Kirill MokevninPRO
		Дело в том что Template это шаблонизатор, который не знает ничего про то как и где его используют, 
		 а мы строим фреймворк, в котором все интегрировано. Фреймворк предоставляет свой собственный 
		 интерфейс ко внутренним компонентам, как минимум по той причине, что эти самые компоненты 
		 можно было подменить, а кроме этого, обычно, нужно еще делать дополнительные настройки, как те же пути.
	Петров Кирилл ТСPRO
		А, это получается, что в любой момент можно поменять шаблонизатор на другой и во фреймворке ничего 
		 менять не надо будет, кроме разве что метода render()? Кажется начинаю понимать. =)
	Kirill MokevninPRO
		Да, такой подход называется "адаптер". В вашем компьютере есть usb, а подключаться к нему можно 
		 используя не только usb, главное чтобы был переходник.

		 
ТЕСТЫ
	В каком случае форма отправляется методом get?
		При выборках (для фильтрации)
	
	В каком случае форма отправляется методом post?
		При изменении данных на сервере
		
		
ЗАДАНИЕ
	Кроме get и post в http определено множество других глаголов. Например, для удаления — DELETE, 
	 а для частичного обновления — PATCH. Их поддерживают все распространенные веб-сервера, 
	 но, к сожалению, формы в html умеют делать отправку только get или post.

	Фреймворки нашли выход из этой ситуации: при генерации форм (а их обычно не руками выводят) 
	 добавляют специальное hidden поле с именем _method и со значением, которое определяет глагол, 
	 шнапример, delete. Дальше фреймворк внутри себя проверяет, если текущий метод POST и 
	 существует значение для _method то используем его как имя глагола. Таким образом у нас 
	 начинают работать такие конструкции:

	<?php

	$app->delete('/users/:id', function ($meta, $params, $attributes) {
		// тут удаляем пользователя
		return response()->redirect('/');
	});
	
	src/App/Application.php
	Реализуйте логику определения $method на основе значения ключа _method из $_POST

	public/index.php
	Реализуйте следующие обработчики:

	Форма создания машины: get -> /cars/new
	Создание машины: post -> /cars
	Удаление машины: delete -> /cars/:id
	resources/views/cars/new.phtml
	Реализуйте форму для создания машины
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		 