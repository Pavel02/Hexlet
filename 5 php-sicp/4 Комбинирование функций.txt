


				
				$square = function($num) 
				{
					return $num * $num;
				};
				
				// Функция сумма квадратов
				$sumOfSquares = function($num1, $num2) use ($square) 
				{
					return $square($num1) + $square($num2);
				};
				
				$num1 = 3;
				echo $sumOfSquares($num1, 5);
				echo $sumOfSquares($square(3), 5);
				
	use нужен для захвата данных снаружи функции во время объявления функции. 
	 А обычные параметры передаются во время вызова функции. И чаще всего эти 
	 события очень удалены друг от друга.
				
	Аппликативнй порядок вычисления аргументов в РНР. 
		Вычисление начинается с самой глубоко вложенной функции.
		
		
	
	В качестве аргумента в функцию можно передавать
		результат вызова функции
		литерал
		переменную
		математическую операцию (например, сложение двух чисел)
		
		
ССЫЛКИ 
	http://php.net/manual/ru/functions.arguments.php
	https://ru.wikipedia.org/wiki/Функция_высшего_порядка
	
	
	
	
ЗАДАНИЕ
	Реализуйте функцию $sumOfCubes, которая принимает на вход два числа и находит сумму их кубов. 
	Воспользуйтесь уже написанной функцией возведения в куб.
	

				$cube = function ($num) {
					return $num * $num * $num;
				};	
	
				$sumOfCubes = function ($num1, $num2) use ($cube) {
					return $cube($num1) + $cube($num2);
				};
				
				
				
				
				
	