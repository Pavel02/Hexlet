
	Большинство курсов не учат самому программированию. Тому как правильно строить абстракции.
	Есть техники позволяющие прокачивать этот навык. И есть техника связанная с декларативным программированием.
		
	Декларативное программирование.
		Связано с декларативной парадигмой.
		
	Парадигма.	
		Императивная (КАК) программа - набор инструкций изменяющих состояние (данные).
		Сейчас большинство современных ЯП. Активно использу
		Примеры: процедурное, ООП.
	
		Декларативная (ЧТО) программа - спецификация описывающая решение задачи.
		Примеры: Логическое, Функциональное.
		
	Парадигмы: компоненты.
		Императивная
			Циклы
			Присваивания.
			
		Декларативная 
			Функции как объекты первого класса
			Рекурсия
			Неизменяемы данные
			(нет присваиваний. нет циклов)					.
		
	Мультипарадигменные Clojure, Ocaml, F#	
	Императивные Ruby, PHP, Python, C, C++, C#, Java, JavaScript
	Функциональные  Haksell, Erlang.
	Логические Prolog
	
	Зачем это нужно?
		Это красиво.
		Развивает абстрактное мышление.
		Приучает к принципу разделяй и властвуй.
		Другой взгляд на возникающие задачи.
		
		
	Императивные языки практически все поддерживают возможность писать в декларативном стиле,
	 там где это имеет смысл.
	
	
	Основание.
		Лямбда-исчисление - формальная система, разработанная америкаским математиком, для 
		 формализации и анализа понятия вычислимости.
		Первоначально было реализовано в Lisp (1958 г).
	
	
	О курсе.
		Курс основан на курсе MIT.
		структура и Интерпретация компьютерных программ (СИКП).SICP
		
		Будет очень не привычно.
		Иногда будет сложно.
		Иногда мозг будет кипеть.
		Жизнь уже не будет прежней.
		
		
	
	
	
	
		
	